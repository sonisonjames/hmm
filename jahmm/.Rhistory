c(1,2,3)
a=c(1,2,3)
a
a[0]
a[1]
a <- 1:10
a
pwd
state <- read.csv("C:/MFE/project/hmm_impl/jahmm/state.seq", header=F)
View(state)
library("codetools", lib.loc="C:/Program Files/R/R-3.0.2/library")
state <- read.csv("C:/MFE/project/hmm_impl/jahmm/state.seq", header=F)
state
help(read.csv)
getwd()
setwd("C:/MFE/project/hmm_impl/jahmm/")
dir()
state
summary(state)
state[0]
state[1]
state[2]
state
state[1000]
state[471]
state$V100
state$V1000
state$V471
state <- read.csv("C:/MFE/project/hmm_impl/jahmm/state.seq", header=F)
state
stripchart(state)
hist(state)
i <- 1:1001
i
plot(state, i)
state
x <- 1:10
y <- 11:20
plot(x,y)
size(i)
i[1]
state[1]
state[0]
state[0]
y <- c(1,1,0,0,0,1,1,0,1,0)
plot(x,y)
x
x <- c(1,2,3,4,5)
y <- (1,1,0,0,0,1)
y <- c(1,1,0,0,0,1)
stepfn(x,y)
stepfun(x,y)
f <- stepfun(x,y)
f
plot(f,x)
x
y
y <- c(1,1,0,0,0)
f <- stepfun(x,y)
y <- c(1,1,0,0,0,1)
f <- stepfun(x,y)
state
a <- 1:1000
a
state
state <- read
history
state <- read.csv("")
getwd()
dir()
state <- read.csv("state.seq", header=FALSE, sep=",")
state
l=c()
for (x in 1:1000) { l = c(l, state[1, x])}
l
x <- 1:999
f <- stepfun(x, l)
plot(f, x)
setwd("c:/mfe/project/hmm_impl/jahmm")
dir()
a <- read.csv("state.pred")
attributes(a)
class(a)
a[1,1]
a[1,2]
a <- read.csv("state.pred", headers=FALSE)
a <- read.csv("state.pred", header=FALSE)
a[1,2]
a[1,1]
b <- read.csv("state.seq", header=FALSE)
b <- read.csv("state.seq", header=FALSE, sep=";")
x <- 1:2000
plot(x, y, type="s")
x <- 1:2001
plot(x, y, type="s")
x <- 1:6
plot(x, y, type="s")
b
a <- read.csv("state.seq", header=FALSE, sep=";")
y <- a[1,15001]
y
y <- a[1,15001:15002]
y
y <- a[1,15001:20000]
y
x <- 1:5000
plot(x,y,type="s")
b <- read.csv("state.pred", header=FALSE)
B
b
b[1,1]
b[1,0]
b[1,2]
b.len()
len(b)
length(b)
length(b[1])
length(b[1,1])
attributes(b)
b.rows
b.row
b.row.names
b.names()
b.names
b.$names
b
b.names
b$names
attributes(b)
b$rows
cat(b$names)
print(b$names)
b$name
b$nams
attributes(x)
attributes(b)
b$row.names
b$class
b$name
attribute(b, class)
attribute(b, $class)
attribute(b)$class
attributes(b)$class
attributes(b)$names
attributes(b)$names
state <- read.csv("state.seq", header=FALSE, sep=";")
y <- state[1, 15001:20000]
x <- 1:5000
plot(x,y,type="s")
plot(x,y,type="s")
state.pred <- read.csv("state.pred", header=FALSE)
X <- 1:5001
plot(x,y)
plot(x,y,type="s")
y <- state.pred[,2]
y
y <- state.pred[,1]
y
y <- state.pred[,2]
y
y <- state.pred[,2]
plot(x,y,type="s")
x <- 1:5001
plot(x,y)
plot(x,y,type="b")
plot(x,y,type="c")
plot(x,y,type="l")
plot(x,y,type="o")
plot(x,y,type="c")
plot(x,y,type="l")
lines(x,y)
lines(x,y)
state.seq <- read.csv("state.seq", header=FALSE, sep=';')
x <- 1:5000
y <- state.seq[1,]
y <- state.seq[1,15001:20000]
y <- state.seq[1,15000:20000]
y1 <- state.seq[1,15000:20000]
state.pred <- read.csv("state.pred", header=FALSE)
y2 <- state.pred[,2]
y2
plot(x,y1,type="s", col="red")
plot(x,y1,type="s")
x <- 1:5000
plot(x,y1,type="s")
x <- 1:5000
x <- 1:500
x <- c()
state.seq <- read.csv("state.seq", header=FALSE, sep=';')
y1 <- state.seq[1,15000:]
y1 <- state.seq[1,15000:20000]
x <- 1:5000
plot(x,y,type="s")
plot(x,y1,type="s")
x <- 1:5001
plot(x,y1,type="s")
state.pred <- read.csv("state.pred", header=FALSE)
y2 <- state.pred[,2]
line(x,y2)
plot(x,y2)
plot(x,y2, type="c")
plot(x,y2, type="l")
par(new=TRUE)
plot(x,y1, type="S")
plot(x,y1, type="S", col="red")
par(new=TRUE)
plot(x,y2, type="l")
plot(x,y1, type="S")
par(new=TRUE)
plot(x,y2, type="l", col="green")
plot(x,y1, type="S")
lines(x,y,col="green")
lines(x,y2,col="green")
plot(x,y1, type="S", col="red")
lines(x,y2,col="green")
require(ggplot2)
install.packages("ggplot2")
state.seq <- read.csv("state.seq", header=FALSE, sep=";")
x <- 1:5001
y1 <- state.seq[1, 15000:20000]
state.pred <- read.csv("state.pred", header=FALSE)
y2 <- state.pred[, 2]
plot(x, y1, type="s")
lines(x, y2, col="green")
plot(x,y1, type="S")
lines(x,y2,col="yellow")
require(ggplot2)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1), colour="red") +  # first layer
geom_line(aes(y=y2), colour="green")  # second layer
df <- data.frame(x,y1,y2)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1), colour="red") +  # first layer
geom_line(aes(y=y2), colour="green")  # second layer
library("grid", lib.loc="C:/Program Files/R/R-3.0.2/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.0.2/library")
help(qplot)
?qplot
attributes(diamonds)
length(diamonds)
length(diamonds[1])
qplot(x, y1)
y1
y <- state.seq(1,15000:20000)
state.seq
state.seq[1,15000:20000]
y <- state.seq[1, 15000:20000]
y1 <- c()
for (i in 15000:20000) {}
for (i in 15000:20000) {
y1 <- c(y1, state.seq[1,i])
}
y1
y2
plot(x,y)
qplot(x,y)
df <- data.frame(x, y1, y2)
qplot(x, y1, df)
qplot(x, y1, y2, df)
qplot(x, y2, df)
qplot(x, y2, y1, df)
qplot(x, y1, y2, df)
qplot(x, y2, y1, df)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1), colour="red") +  # first layer
geom_line(aes(y=y2), colour="green")  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="green")  # second layer
y <- state.seq(1,15000:20000)
state.pred[,2]
qplot(x, y1, data=df)
qplot(x, y2, data=df)
plot(x, y1, type="s")
plot(x, y2)
plot(x, y2, type="c")
plot(x, y2, type="l")
dsmall
require(ggplot2)
dsmall
class(diamonds)
class(dsmall)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1), alpha=I(1/2)) +  # first layer
geom_line(aes(y=y2), colour="green")  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1), alpha=I(1/2)) +  # first layer
geom_line(aes(y=y2), colour="red", alpha=I(1/2))  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="red", alpha=I(1/2))  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="red", alpha=I(1/10))  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="red", alpha=I(1/5))  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="red", alpha=I(1/4))  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="red", alpha=I(1/3))  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="blue", alpha=I(1/3))  # second layer
qplot(x, y1, y2, df)
qplot(x, y1, y2, data=df)
qplot(x, y1, y2, data=df)
qplot(x, y2, data=df)
qplot(x, y2, data=df, geom=c("line", "smooth"))
qplot(x, y2, data=df, geom=c("line"))
qplot(x, y2, data=df, geom=c("line"), aplha=I(1/2))
qplot(x, y2, data=df, geom=c("line"), aplha=I(1/2), color="red")
qplot(x, y2, data=df, geom=c("line"), aplha=I(1/2), color="red")
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="blue", alpha=I(1/3))  # second layer
state.pred2 <- read.csv("state.pred2", header=FALSE)
y3 <- state.pred2[,2]
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="blue", alpha=I(1/3))  # second layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="blue", alpha=I(1/3)) + # second layer
geom_line(aes(y=y3), colour="red", alpha=I(1/3)) # third layer
state.pred3 <- read.csv("state.pred3", header=FALSE)
y3 <- state.pred3[,2]
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="blue", alpha=I(1/3)) + # second layer
geom_line(aes(y=y3), colour="red", alpha=I(1/3)) + # third layer
####
;
geom_line(aes(y=y3), colour="red", alpha=I(1/3))  # third layer
ggplot(df, aes(x)) +                    # basic graphical object
+     geom_line(aes(y=y1)) +  # first layer
+     geom_line(aes(y=y2), colour="blue", alpha=I(1/3)) + # second layer
+     geom_line(aes(y=y3), colour="red", alpha=I(1/3))  # third layer
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1)) +  # first layer
geom_line(aes(y=y2), colour="blue", alpha=I(1/3)) + # second layer
geom_line(aes(y=y3), colour="red", alpha=I(1/3))  # third layer
sti <- read.csv("sti.csv")
close <- sti[,7]
n <- 1:6567
df <- data.range(n, close)
df <- data.frame(n, close)
qplot(n, close, df)
for (i in 1:6567) {
;
}
close2 <- c()
for (i in 1:6567) {
close2 <- c(close2, close[6567-i-1])
}
qplot(n, close2, df)
df <- data.frame(n, close2)
close2 <- c()
for (i in 1:6567) {
close2 <- c(close2, close[6567-i-1])}
close[1]
close[6567-0]
close2 <- c()
close2 <- c(close2, close[6567])
close2 <- c(close2, close[6566])
close2
close2 <- c(close2, close[6])
close2 <- c(close2, close[1])
close2 <- c()
for (i in 1:6567) {
close2 <- c(close2, close[i])
}
for (i in 1:6567) {
close2 <- c()
}
for (i in 1:6567) {
close2 <- c(close2, close[6568-i])
}
df <- data.frame(n, close2)
qplot(n, close2, df)
plot(n, close2, type="b")
plot(n, close2, type="l")
qplot(n, close2, df)
